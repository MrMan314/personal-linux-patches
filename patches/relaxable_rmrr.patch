diff --git a/drivers/iommu/intel/iommu.c b/drivers/iommu/intel/iommu.c
index 59df7e42fd53..0cc608e46e77 100644
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@ -289,6 +289,7 @@ EXPORT_SYMBOL_GPL(intel_iommu_enabled);
 static int dmar_map_gfx = 1;
 static int intel_iommu_superpage = 1;
 static int iommu_identity_mapping;
+static int intel_relaxable_rmrr = 0;
 static int iommu_skip_te_disable;
 
 #define IDENTMAP_GFX		2
@@ -346,6 +347,9 @@ static int __init intel_iommu_setup(char *str)
 		} else if (!strncmp(str, "sm_off", 6)) {
 			pr_info("Scalable mode is disallowed\n");
 			intel_iommu_sm = 0;
+		} else if (!strncmp(str, "relax_rmrr", 10)) {
+			pr_info("Intel-IOMMU: assuming all RMRRs are relaxable. This can lead to instability and/or data loss\n");
+			intel_relaxable_rmrr = 1;
 		} else if (!strncmp(str, "tboot_noforce", 13)) {
 			pr_info("Intel-IOMMU: not forcing on after tboot. This could expose security risk for tboot\n");
 			intel_iommu_tboot_noforce = 1;
@@ -2529,7 +2533,7 @@ static bool device_rmrr_is_relaxable(struct device *dev)
 		return false;
 
 	pdev = to_pci_dev(dev);
-	if (IS_USB_DEVICE(pdev) || IS_GFX_DEVICE(pdev))
+	if (intel_relaxable_rmrr || IS_USB_DEVICE(pdev) || IS_GFX_DEVICE(pdev))
 		return true;
 	else
 		return false;
